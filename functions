function source_rc {
  file=$1
  rc=255
  if [ -e $file ]; then
    source $file
    rc=0
  fi
  return $?
}

function test_overcloud {
  rc=255
  echo "Testing overcloud ..."
  if [ -e /home/stack/cloud/overcloudrc ]; then
    source /home/stack/cloud/overcloudrc
    bash setup_image.sh
    rc=$?
    if [ $rc -eq 0 ]; then
      bash create_network.sh
      rc=$?
      if [ $rc -eq 0 ]; then
        bash boot_vm.sh
        rc=$?
        if [ $rc -eq 0 ]; then
          bash delete_network.sh
          rc=$?
        fi
      fi
    fi
  else
    echo "Something weird happened"
  fi
  return $rc
}

function openstack_oc_update {
  openstack overcloud update stack $updateargs overcloud
  rc=$?
  return $rc
}

function openstack_oc_deploy {
  if [ -z $cephscale ] || [ -z $controlscale ] || [ -z $computescale ]; then
    rc=255
  elif [ \( $(expr $cephscale % 2) -eq 0 -a $cephscale -ne 0 \) ] || [ $(expr $controlscale % 2) -eq 0 -a $controlscale -eq 1 ]; then
    rc=254
  else
    if [ -z "$kvmhost" ]; then
      libvirttype=kvm
    else
      libvirttype=qemu
    fi
    openstack overcloud deploy $deploymentargs --libvirt-type $libvirttype
    rc=$?
    if [ $rc -eq 0 ]; then
      for ip in $(nova list | grep ACTIVE | awk -F= '{ print $2 }' | awk '{ print $1 }'); do
        ssh-keygen -R $ip
      done
    fi
  fi
  return $rc
}

function delete_overcloud {
  inc=0
  rc=0
  echo "Deleting overcloud...."
  heat=$( heat stack-list | grep overcloud )
  if [ ! -z "$heat" ]; then
    heat stack-delete overcloud
    while [ ! -z "$heat" ]; do
      heat=$( heat stack-list | grep overcloud )
      echo -n "."
      if [[ "$heat" =~ FAILED ]]; then
        inc=$( expr $inc + 1 )
        if [ $inc -le $maxfailedcount ]; then
          echo "Stack deletion failed... retrying!"
          heat stack-delete overcloud
          sleep 1
        else
          rc=255
          break
        fi
      fi
      sleep 1
    done
  fi
  return $rc
}

